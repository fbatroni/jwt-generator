/*eslint no-process-env: "off"*/
"use strict";

const nodemailer = require('nodemailer');
const mustache = require('mustache');
const fs = require('fs-promise');

// create reusable transporter object using the default SMTP transport
const transporter = nodemailer.createTransport('smtp://localship');

// XXX: We need to use a real from based on GLG rules
const fromName = "GLG Login";
const fromAddress = "login@glgroup.com";
const subject = process.env.EMAIL_SUBJECT || "The Login Link You Requested";
const htmlTemplateFile = process.env.HTML_TEMPLATE_FILE || `${__dirname}/../template/email.html`;
const textTemplateFile = process.env.TEXT_TEMPLATE_FILE || `${__dirname}/../template/email.txt`;

module.exports = {
  sendEmail: data => new Promise((resolve, reject) => {
    Promise.all([
        fs.readFile(htmlTemplateFile, 'utf8'),
        fs.readFile(textTemplateFile, 'utf8')
      ])
      .then(templates => {
        return {
          from: `${fromName} <${fromAddress}>`,
          to: `${data.toAddress}`,
          subject: subject,
          html: mustache.render(templates[0], data),
          text: mustache.render(templates[1], data)
        }
      })
      .then(emailData => transporter.sendMail(emailData, (error, info) => {
        if (error) {
          reject(error);
        }
        resolve(info);
      }))
      .catch(e => {
        throw e;
      })
  })
}
